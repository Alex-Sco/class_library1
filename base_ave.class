!base_ave.class
!AIM: to base & ave sections of the data 

!Note: you may need to execute this procedure twice in order to find the window range. You can also use @check_ave to do this, but that procedure will generate extra *test file in the local dir.
!BaseNumber means the base number. It is a signal to show the base and ave data is generate by batch procedure and the highest basenumber is 1.

!You need to specify the reference rest frequency and the velocity in the reference channel.
!!!!NOTE: the velocity in the reference channel should be found by yourself: the velo of the strong line you set as reference (e.g.13CO) while you modify the freq as the line's rest freq and modify velo as 0.

!Edit by Yichen Sun
!20200406
!20200413 change the order of five input variables
!-------------------------------------------------------

symbol verbose "sic message class s+i" ! add
symbol quiet "sic message class s-i" ! remove


define char InputFileName*100 
!define char WindowSet*200 
define char BaseNumber*100 
define double Freq
define double Velo 

let  InputFileName &1
let  Freq &2
let  Velo &3
let  BaseNumber &4
!let  WindowSeti &5


file in 'InputFileName'.30m
find
set mo x t
set unit v f
set align f c

ave /res
p
set win


sic dele 'InputFileName'_based'BaseNumber'.30m
file out 'InputFileName'_based'BaseNumber'.30m s

quiet


for i 1 to found
get next
modi freq 'Freq'
modi velo 'Velo'
!set win 'WindowSet'
base 'BaseNumber'
write
next

verbose


for i 1 to R%HEAD%BAS%NWIND
exam R%HEAD%BAS%W1[i]
exam R%HEAD%BAS%W2[i]
next i


say "base completed"

file in 'InputFileName'_based'BaseNumber'.30m
sic dele 'InputFileName'_ave_based'BaseNumber'.30m
file out 'InputFileName'_ave_based'BaseNumber'.30m s

find
set nomatch
set align f c
ave /res
write 1

file in 'InputFileName'_ave_based'BaseNumber'.30m
find
get 1
modi velo 'Velo'
!set unit f v
pl

